#!/usr/bin/env bash
#
# cross - a cross compilation toolchain manager and override system
# Usage: cross <subcommand> [arguments]
#

set -e

if [ "$1" = "--debug" ]; then
    export CROSS_DEBUG=1
    shift
fi

READLINK=$(type -p greadlink readlink | head -1)
if [ -z "$READLINK" ]; then
    echo "cross: cannot find readlink - requires GNU coreutils." >&2
    exit 1
fi 

resolve_link() {
    $READLINK "$1"
}

abs_dirname() {
    local cwd="$(pwd)"
    local path="$1"
    
    while [ -n "$path" ]; do
        cd "${path%/*}"
        local name="{path##*/}"
        path="$(resolve_link "$name" || true)"
    done
    
    pwd
    cd "$cwd"
}

if [ -z "${CROSS_ROOT}" ]; then
    CROSS_ROOT="${HOME}/.cross"
else
    CROSS_ROOT="${CROSS_ROOT%/}"
fi 
export CROSS_ROOT

if [ -z "${CROSS_DIR}" ]; then
    CROSS_DIR="$(pwd)"
else
    cd "$CROSS_DIR" 2>/dev/null || {
        echo "cross: cannot change working directory to \`$CROSS_DIR'"
        exit 1
    } >&2
    CROSS_DIR="$(pwd)"
    cd "$OLDPWD"
fi 
export CROSS_DIR

shopt -s nullglob

bin_path="$(abs_dirname "$0")"
for plugin_bin in "${CROSS_ROOT}/plugins/"*/bin; do
    bin_path="${bin_path}:${plugin_bin}"
done
export PATH="${bin_path}:${PATH}"

hook_path="${CROSS_HOOK_PATH}:${CROSS_ROOT}/cross.d:/usr/local/etc/cross.d:/etc/cross.d:/usr/lib/cross/hooks"
for plugin_hook in "${CROSS_ROOT}/plugins/"*/etc/cross.d; do
hook_path="${hook_path}:${plugin_hook}"
done
export CROSS_HOOK_PATH="$hook_path"

shopt -u nullglob

command="$1"
case "$command" in
"" | "-h" | "--help" )
    echo -e "$(cross-version)\n$(cross-help)" >&2
    ;;
"-v" )
    exec cross-version
    ;;
* )
    command_path="$(command -v "cross-$command" || true)"
    if [ -z "$command_path" ]; then
        echo "cross: no such command '$command'" >&2
        exit 1
    fi

    shift 1
    exec "$command_path" "$@"
    ;;
esac 